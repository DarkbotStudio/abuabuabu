from aiogram import types, Router
from aiogram.types import Message
from aiogram.filters import Command
import config
from procfiles import db,nsfwdetector

router = Router()

brawlers = config.brawlers
countries = config.countries

@router.message(Command("start"))
async def start_handler(msg: Message):
    """Handler /start command"""
    user_id = msg.from_user.id
    if await db.is_user_in_db(user_id):
        def calculate_rank(popularity):
            if 0 == popularity <= 99:
                return 'D'
            elif 100 <= popularity <= 999:
                return 'C'
            elif 1000 <= popularity <= 9999:
                return 'B'
            elif 10000 <= popularity <= 99999:
                return 'A'
            elif 100000 <= popularity <= 999999:
                return 'S'
            elif popularity >= 1000000:
                return 'S+'
        data = await db.load_user_data(user_id)
        menu_btns = [
            [
                types.InlineKeyboardButton(text=f'{"üîç –ù–∞–π—Ç–∏ —Ñ–ª—É–¥" if data[2] is None else "üßë –ú–æ–π —Ñ–ª—É–¥"}', callback_data=f'{"search_flood" if data[2] is None else "my_flood"}')
            ],
            [
                types.InlineKeyboardButton(text="üë• –§–ª—É–¥—ã", callback_data="floods"),
                types.InlineKeyboardButton(text="üîù –¢–æ–ø —Ñ–ª—É–¥–æ–≤", callback_data="top_floods")
             ],
            [
                types.InlineKeyboardButton(text="üìí –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å", callback_data="my_profile"),
                types.InlineKeyboardButton(text="üÜò –ü–æ–º–æ—â—å", callback_data="help")
            ],
            [
                types.InlineKeyboardButton(text="‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings"),
                types.InlineKeyboardButton(text="‚Ñπ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data="info")
            ]
        ]
        menu = types.InlineKeyboardMarkup(inline_keyboard=menu_btns)
        await msg.answer(f"–° –≤–æ–∑—Ä–∞—â–µ–Ω–∏–µ–º, {msg.from_user.full_name}!\n"
                         f"–í–æ—Ç —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å:\n"
                         f"üÜî ID: {user_id}\n"
                         f"üìí –ò–º—è: {data[1]}\n"
                         f"üë• –í —Ñ–ª—É–¥–µ: {'–¥–∞' if data[2] is not None else '–Ω–µ—Ç'}\n"
                         f"üìà –†–∞–Ω–≥: {calculate_rank(data[10])} ({data[10]})", reply_markup=menu)
    else:
        await msg.answer(f"–ü—Ä–∏–≤–µ—Ç, {msg.from_user.full_name}!\n"
                         f"–î–∞–≤–Ω–æ —Ö–æ—Ç–µ–ª –≤—Å—Ç—É–ø–∏—Ç—å –≤ —Ñ–ª—É–¥ –Ω–æ –Ω–µ –º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–π?\n"
                         f"–ò–ª–∏ –º–æ–∂–µ—Ç —Ö–æ—Ç–µ–ª –¥–∞–∂–µ —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–π –Ω–æ –≤ –Ω–µ–≥–æ –Ω–∏–∫—Ç–æ –Ω–µ –∑–∞—Ö–æ–¥–∏—Ç?\n"
                         f"–ù–µ –±–µ–¥–∞! Saturn Flood Bot –±—ã–ª —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–∞–∫–∏—Ö —Å–∏—Ç—É–∞—Ü–∏–π!\n"
                         f"–ó–¥–µ—Å—å —Ç—ã –Ω–∞–π–¥–µ—à—å —Å–æ—Ç–Ω–∏ —Ñ–ª—É–¥–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ —Å —Ä–∞–¥–æ—Å—Ç—å—é –ø—Ä–∏–º—É—Ç —Ç–µ–±—è –∫ —Å–µ–±–µ\n"
                         f"–ù–æ –Ω–µ –∑–∞–±—ã–≤–∞–π —á—Ç–æ —É –∫–∞–∂–¥–æ–≥–æ —Ñ–ª—É–¥–∞ –µ—Å—Ç—å —Å–≤–æ–∏ –ø—Ä–∞–≤–∏–ª–∞ –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ –∏ –ø–æ–ª—É—á–∏—Ç—å –ø–æ –ø–æ–ø–µ)\n"
                         f'–ü–µ—Ä–µ–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –æ–∑–Ω–∞–∫–æ–º—å—Å—è —Å <a href="https://teletype.in/@saturnfloodowner/BotData">–¥–∞–Ω–Ω—ã–º–∏ –∫–æ—Ç–æ—Ä—ã–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –±–æ—Ç</a> –∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è –∫–æ–º–∞–Ω–¥–æ–π /reg [–∏–º—è] [–≤–æ–∑—Ä–∞—Å—Ç] [—Å—Ç—Ä–∞–Ω–∞] [–ø–µ—Ä—Å–æ–Ω–∞–∂ –∏–∑ Brawl Stars (–∏–º—è)]\n'
                         f'\n\n–ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –º—ã –±—É–¥–µ–º —Å—á–∏—Ç–∞—Ç—å —á—Ç–æ –≤—ã –æ–∑–Ω–∞–∫–æ–º–∏–ª–∏—Å—å —Å <a href="https://teletype.in/@saturnfloodowner/BotData">–¥–∞–Ω–Ω—ã–º–∏ –∫–æ—Ç–æ—Ä—ã–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –±–æ—Ç</a>', disable_web_page_preview=True)

@router.message(Command("reg"))
async def reg_handler(msg: Message):
    """Handle /reg command and register user"""
    user_id = msg.from_user.id
    if await db.is_user_in_db(user_id):
        await msg.answer("–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!\n"
                         "–ù–∞–ø–∏—à–∏—Ç–µ /start —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é")
    else:
        def extract_data(text):
            return text.split() if len(text.split()) > 1 else None
        data = extract_data(msg.text)
        if data:
            name = str(data[1]).capitalize()
            age = data[2]
            country = data[3]
            role = data[4]
            if country in countries:
                if role in brawlers:
                    await db.register_user(user_id, name, None, None, age, country, None)
                    await msg.answer("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!\n"
                                     "–ù–∞–ø–∏—à–∏—Ç–µ /start –µ—â–µ —Ä–∞–∑ —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é")
                else: await msg.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è —Å–≤–æ–µ–π —Ä–æ–ª–∏ (–ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤ –∏–≥—Ä–µ –∫–∞–∫ –ø–∏—à–µ—Ç—Å—è –∏–º—è –≤–∞—à–µ–≥–æ –±—Ä–∞–≤–ª–µ—Ä–∞)")
            else: await msg.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è –≤–∞—à–µ–π —Å—Ç—Ä–∞–Ω—ã.\n"
                                   "–ò–ª–∏ –º–æ–∂–µ—Ç –≤—ã –ø—Ä–∏–¥—É–º–∞–ª–∏ –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω—É?ü§®")
        else: await msg.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è, –≤–æ–∑–º–æ–∂–Ω–æ –≤—ã –≤–≤–µ–ª–∏ –Ω–µ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ")
